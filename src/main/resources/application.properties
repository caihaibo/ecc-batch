server.port = 2001
spring.boot.admin.url=http://localhost:${server.port}
# Database
spring.datasource.url=jdbc:mysql://localhost:3306/manager
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=100
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat


#mybatis
mybatis.mapper-locations=classpath:com/ecc/batch/mapper/*Mapper.xml
mybatis.type-aliases-package=com.ecc.batch.dao

spring.redis.database=0
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

regCenter.serverList = localhost:2181
regCenter.namespace = ecc-batch

logging.path=/logs


simpleJob.cron = 0/5 * * * * ?
simpleJob.shardingTotalCount = 3
simpleJob.shardingItemParameters = 0=Beijing,1=Shanghai,2=Guangzhou


dataflowJob.cron = 0/5 * * * * ?
dataflowJob.shardingTotalCount = 3
dataflowJob.shardingItemParameters = 0=Beijing,1=Shanghai,2=Guangzhou